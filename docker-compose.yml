services:

  app:
    image: brpatapim/cloudfilestorage
    container_name: cloud-file-storage
    ports:
      - "8081:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - DATABASE_URL=jdbc:postgresql://database:5432/cloud_db
      - DATABASE_USERNAME=${DATABASE_USERNAME}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
      - SPRING_DATASOURCE_URL=jdbc:postgresql://database:5432/cloud_db
      - SPRING_DATASOURCE_USERNAME=${DATABASE_USERNAME}
      - SPRING_DATASOURCE_PASSWORD=${DATABASE_PASSWORD}
      - REDIS_HOST=redis
      - REDIS_PORT=${REDIS_PORT}
      - SPRING_REDIS_HOST=redis
      - SPRING_REDIS_PORT=${REDIS_PORT}
      - SPRING_REDIS_PASSWORD=pass
      - MINIO_ENDPOINT=http://minio:9000
      - MINIO_URL=http://minio:9000
      - MINIO_ACCESS_KEY=${MINIO_ACCESS_KEY}
      - MINIO_SECRET_KEY=${MINIO_SECRET_KEY}
    depends_on:
      - database
      - redis
      - minio
    networks:
      - app-network


  database:
    image: postgres:17
    environment:
      POSTGRES_DB: cloud_db
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
    ports:
      - "5433:5432"
    volumes:
      - db_volume:/var/lib/postgresql/data
    networks:
      - app-network

  redis:
    image: redis:latest
    container_name: redis_container
    command: redis-server --requirepass pass
    ports:
      - "6380:6379"
    volumes:
      - redis_volume:/data
    networks:
      - app-network

  minio:
    image: minio/minio:RELEASE.2025-09-07T16-13-09Z-cpuv1
    container_name: minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: ${MINIO_ACCESS_KEY}
      MINIO_ROOT_PASSWORD: ${MINIO_SECRET_KEY}
      MINIO_DEFAULT_BUCKETS: my-bucket
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  db_volume:
  redis_volume:
  minio_data: